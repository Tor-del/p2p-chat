{"version":3,"sources":["components/Space/Space.tsx","typescript-lib/index.js","types/MessageSenderEnum.ts","components/Chat/Chat.tsx","types/MessageTypeEnum.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["Space","styled","div","size","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","MESSAGE_SENDER","CHANNEL_LABEL","createPeerConnection","_a","channelInstance","remoteDescription","onChannelOpen","onMessageReceived","peerConnection","RTCPeerConnection","iceServers","urls","username","credential","setAnswerDescription","answerDescription","setRemoteDescription","JSON","parse","sendMessage","message","send","res","onicecandidate","candidate","localDescription","stringify","ondatachannel","channel","onopen","onmessage","event","data","description","createAnswer","setLocalDescription","createDataChannel","console","error","setupChannelAsAHost","createOffer","MESSAGE_TYPE","Mode","InputForm","form","Message","sender","ME","css","MessagesWrapper","Wrapper","Chat","messages","React","useState","messageToSend","setMessageToSend","map","key","id","payload","onSubmit","preventDefault","stopPropagation","type","placeholder","onChange","target","Version","App","mode","setMode","isReady","setIsReady","setMessages","setAnswerDescriptionRef","useRef","sendMessageRef","messageString","handleHostBtnClick","a","HOST","current","Base64","encode","handleRemoteDescriptionInputChange","handleSlaveBtnClick","SLAVE","decode","handleLocalDescriptionCopy","copy","textMessages","filter","m","TEXT","Title","style","textAlign","onClick","block","Text","Search","enterButton","onSearch","Math","random","toFixed","STRANGER","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b010260.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const Space = styled.div<{ size: number }>`\n  padding-top: ${({ size }) => `${size}px`};\n`;\n","/* eslint-disable */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar CHANNEL_LABEL = 'P2P_CHAT_CHANNEL_LABEL';\r\nfunction createPeerConnection(_a) {\r\n    var remoteDescription = _a.remoteDescription, onChannelOpen = _a.onChannelOpen, onMessageReceived = _a.onMessageReceived;\r\n    var peerConnection = new RTCPeerConnection({\r\n        iceServers: [\r\n            {\r\n                urls: 'stun:stun.l.google.com:19302',\r\n            },\r\n            {\r\n                urls: 'turn:turn.anyfirewall.com:443?transport=tcp',\r\n                username: 'webrtc',\r\n                credential: 'webrtc',\r\n            },\r\n        ],\r\n    });\r\n    var channelInstance;\r\n    function setupChannelAsAHost() {\r\n        try {\r\n            channelInstance = peerConnection.createDataChannel(CHANNEL_LABEL);\r\n            channelInstance.onopen = function () {\r\n                onChannelOpen();\r\n            };\r\n            channelInstance.onmessage = function (event) {\r\n                onMessageReceived(event.data);\r\n            };\r\n        }\r\n        catch (e) {\r\n            console.error('No data channel (peerConnection)', e);\r\n        }\r\n    }\r\n    function createOffer() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var description;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, peerConnection.createOffer()];\r\n                    case 1:\r\n                        description = _a.sent();\r\n                        peerConnection.setLocalDescription(description);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function setupChannelAsASlave() {\r\n        peerConnection.ondatachannel = function (_a) {\r\n            var channel = _a.channel;\r\n            channelInstance = channel;\r\n            channelInstance.onopen = function () {\r\n                onChannelOpen();\r\n            };\r\n            channelInstance.onmessage = function (event) {\r\n                onMessageReceived(event.data);\r\n            };\r\n        };\r\n    }\r\n    function createAnswer(remoteDescription) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var description;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, peerConnection.setRemoteDescription(JSON.parse(remoteDescription))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, peerConnection.createAnswer()];\r\n                    case 2:\r\n                        description = _a.sent();\r\n                        peerConnection.setLocalDescription(description);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function setAnswerDescription(answerDescription) {\r\n        peerConnection.setRemoteDescription(JSON.parse(answerDescription));\r\n    }\r\n    function sendMessage(message) {\r\n        if (channelInstance) {\r\n            channelInstance.send(message);\r\n        }\r\n    }\r\n    return new Promise(function (res) {\r\n        peerConnection.onicecandidate = function (e) {\r\n            if (e.candidate === null) {\r\n                res({\r\n                    localDescription: JSON.stringify(peerConnection.localDescription),\r\n                    setAnswerDescription: setAnswerDescription,\r\n                    sendMessage: sendMessage,\r\n                });\r\n            }\r\n        };\r\n        if (!remoteDescription) {\r\n            setupChannelAsAHost();\r\n            createOffer();\r\n        }\r\n        else {\r\n            setupChannelAsASlave();\r\n            createAnswer(remoteDescription);\r\n        }\r\n    });\r\n}\n\nexport { createPeerConnection };\n","export enum MESSAGE_SENDER {\n  ME = 'ME',\n  STRANGER = 'STRANGER',\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { Input } from 'antd';\nimport 'antd/es/input/style/css';\n\nimport { TextMessageType } from '../../types/TextMessageType';\nimport { MESSAGE_SENDER } from '../../types/MessageSenderEnum';\n\nexport interface ChatProps {\n  messages: TextMessageType[];\n  sendMessage: (message: string) => any;\n};\n\nconst InputForm = styled.form``;\nconst Message = styled.div<{ sender: MESSAGE_SENDER }>`\n  ${({ sender }) => sender === MESSAGE_SENDER.ME ? css`\n    text-align: right;\n  ` : ''};\n`;\nconst MessagesWrapper = styled.div``;\nconst Wrapper = styled.div``;\n\nexport const Chat: React.FC<ChatProps> = ({ messages, sendMessage }) => {\n  const [messageToSend, setMessageToSend] = React.useState<string>('');\n\n  const handleMessageToSendInputChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setMessageToSend(event.target.value);\n  }\n\n  const handleMessageToSendFormSubmit: React.FormEventHandler = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    sendMessage(messageToSend);\n    setMessageToSend('');\n  }\n\n  return (\n    <Wrapper>\n      <MessagesWrapper>\n        {messages.map(message =>\n          <Message key={message.id} sender={message.sender}>{message.payload}</Message>  \n        )}\n      </MessagesWrapper>\n      <InputForm onSubmit={handleMessageToSendFormSubmit}>\n        <Input type=\"text\" placeholder=\"Message...\" value={messageToSend} onChange={handleMessageToSendInputChange} />\n      </InputForm>\n    </Wrapper>\n  );\n}\n","export enum MESSAGE_TYPE {\n  TEXT = 'TEXT',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Base64 } from 'js-base64';\nimport copy from 'copy-to-clipboard';\n\nimport { Input } from 'antd';\nimport 'antd/es/input/style/css';\nimport { Card } from 'antd';\nimport 'antd/es/card/style/css';\nimport { Button } from 'antd';\nimport 'antd/es/button/style/css';\nimport { Typography } from 'antd';\nimport 'antd/es/typography/style/css';\n\nimport { Space } from './components/Space/Space';\nimport { createPeerConnection } from './typescript-lib';\nimport { Chat } from './components/Chat/Chat';\nimport { MessageType } from './types/MessageType';\nimport { MESSAGE_SENDER } from './types/MessageSenderEnum';\nimport { MESSAGE_TYPE } from './types/MessageTypeEnum';\n\nenum Mode {\n  HOST = 'HOST',\n  SLAVE = 'SLAVE',\n};\n\nconst Version = styled.div`\n  text-align: center;\n  font-size: 10px;\n`;\nconst Wrapper = styled.div`\n  padding: 12px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst App: React.FC = () => {\n  const [mode, setMode] = React.useState<Mode | undefined>();\n  const [isReady, setIsReady] = React.useState<boolean>(false);\n  const [localDescription, setLocalDescription] = React.useState<string | undefined>();\n  const [remoteDescription, setRemoteDescription] = React.useState<string>('');\n  const [messages, setMessages] = React.useState<MessageType[]>([]);\n  const setAnswerDescriptionRef = React.useRef<((answerDescription: string) => void) | undefined>();\n  const sendMessageRef = React.useRef<((message: string) => void) | undefined>();\n\n  const onMessageReceived = (messageString: string) => {\n    try {\n      const message = JSON.parse(messageString) as MessageType;\n      setMessages((messages) => [...messages, message]);\n    } catch {}\n  }\n\n  const onChannelOpen = () => setIsReady(true);\n\n  const handleHostBtnClick = async () => {\n    setMode(Mode.HOST);\n    const { localDescription, setAnswerDescription, sendMessage } = await createPeerConnection({ onMessageReceived, onChannelOpen });\n    sendMessageRef.current = sendMessage;\n    setAnswerDescriptionRef.current = setAnswerDescription;\n    setLocalDescription(Base64.encode(localDescription));\n  }\n\n  const handleAnswerBtnClick = () => {\n    if (remoteDescription && setAnswerDescriptionRef.current) {\n      setAnswerDescriptionRef.current(Base64.decode(remoteDescription));\n    }\n  }\n\n  const handleRemoteDescriptionInputChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setRemoteDescription(event.target.value);\n  }\n\n  const handleSlaveBtnClick = async () => {\n    if (remoteDescription) {\n      setMode(Mode.SLAVE);\n      const { localDescription, sendMessage } = await createPeerConnection({ remoteDescription: Base64.decode(remoteDescription), onMessageReceived, onChannelOpen });\n      sendMessageRef.current = sendMessage;\n      setLocalDescription(Base64.encode(localDescription));\n    }\n  }\n\n  const handleLocalDescriptionCopy = () => {\n    localDescription && copy(localDescription);\n  }\n\n  const handleChatSendMessage = (messageToSend: string) => {\n    if (sendMessageRef.current) {\n      const message: MessageType = {\n        id: Math.random().toFixed(10),\n        sender: MESSAGE_SENDER.STRANGER,\n        type: MESSAGE_TYPE.TEXT,\n        payload: messageToSend,\n      };\n\n      sendMessageRef.current(JSON.stringify(message));\n      setMessages((messages) => [...messages, {\n        ...message,\n        sender: MESSAGE_SENDER.ME,\n      }])\n    }\n  }\n\n  const textMessages = messages.filter(m => m.type === MESSAGE_TYPE.TEXT);\n  \n  return (\n    <Wrapper>\n      <Typography.Title style={{ textAlign: 'center' }}>p2p chat</Typography.Title>\n      {!mode &&\n        <div>\n          <Card>\n            <Button onClick={handleHostBtnClick} type=\"primary\" block>New chat</Button>\n          </Card>\n          <Space size={24} />\n          <Card>\n            <Input type=\"text\" value={remoteDescription} onChange={handleRemoteDescriptionInputChange} placeholder=\"Paste connection code here...\" />\n            <Space size={12} />\n            <Button onClick={handleSlaveBtnClick} type=\"primary\" block>Join a chat</Button>\n          </Card>\n        </div>\n      }\n      {mode === Mode.HOST && !isReady &&\n        <div>\n          <Typography.Text>Send this code to other person:</Typography.Text>\n          <Space size={4} />\n          <Input.Search\n            type=\"text\"\n            value={localDescription ? localDescription : 'preparing connection...'}\n            enterButton=\"Copy to clipboard\"\n            onSearch={handleLocalDescriptionCopy}\n          />\n          <Space size={24} />\n          <Typography.Text>Code from your buddy:</Typography.Text>\n          <Space size={4} />\n          <Input.Search\n            type=\"text\"\n            value={remoteDescription}\n            onChange={handleRemoteDescriptionInputChange}\n            placeholder=\"Paste an answer code\"\n            enterButton=\"Connect\"\n            onSearch={handleAnswerBtnClick}\n          />\n        </div>\n      }\n      {mode === Mode.SLAVE && !isReady &&\n        <div>\n          <Typography.Text>Send this code to other person:</Typography.Text>\n          <Space size={4} />\n          <Input.Search\n            type=\"text\"\n            value={localDescription ? localDescription : 'preparing connection...'}\n            enterButton=\"Copy to clipboard\"\n            onSearch={handleLocalDescriptionCopy}\n          />\n        </div>\n      }\n      {mode && isReady &&\n        <Chat messages={textMessages} sendMessage={handleChatSendMessage} />\n      }\n      <Space size={24} />\n      <Version>v0.0.5</Version>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}